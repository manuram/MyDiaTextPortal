@model SeniorDesign.Models.RegisterModel

<script src="@Url.Content("~/Scripts/jquery-1.5.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true, "Account creation was unsuccessful. Please correct the errors and try again.")
    <fieldset>
    <legend>Register for MyDiaText</legend>
        <div style="float:left;width:30%">
        

        @*<div class="editor-label">
            @Html.LabelFor(model => model.FirstName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastName)
            @Html.ValidationMessageFor(model => model.LastName)
        </div>*@

        <div class="editor-label">
            @Html.LabelFor(model => model.UserName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserName)
            @Html.ValidationMessageFor(model => model.UserName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.phone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.phone)
            @Html.ValidationMessageFor(model => model.phone)
        </div>

@*        <div class="editor-label">
            @Html.LabelFor(model => model.dataplan)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.dataplan)
            @Html.ValidationMessageFor(model => model.dataplan)
        </div>*@
@*        <div class="editor-label">
            @Html.LabelFor(model => model.referralCode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.referralCode)
        </div>*@

        <div class="editor-label">
            Choose a Behavior goal
           @* @Html.LabelFor(model => model.GoalCode)*@
        </div>
        <div class="editor-field">
            <select name="GoalCategory" style="width:205px">
            <option value="1">Read food labels</option>
            <option value="2">Eat fruits/veggies</option>
            <option value="3">Portion control</option>
            <option value="4">Be active</option>
            <option value="5">Less computer/TV</option>
            <option value="6">Log blood sugars</option>
            <option value="7">Check ketones</option>
            <option value="8">Insulin injections</option>
            <option value="9">Rotate injections</option>
            <option value="10">Brush teeth</option>
            <option value="11">Watch low blood sugar, bring snacks</option>
            <option value="12">Medical bracelet</option>
            <option value="13">Tell friends</option>
            <option value="14">Remain calm when reviewing blood sugar</option>
            </select>
            @*
            @Html.EditorFor(model => model.GoalCode)
            @Html.DropDownListFor(Model.GoalCode,(IEnumerable<SelectListItem>)l)*@
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ConfirmPassword)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ConfirmPassword)
            @Html.ValidationMessageFor(model => model.ConfirmPassword)
        </div>

@*        <div class="editor-label">
            @Html.LabelFor(model => model.DOB)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DOB)
            @Html.ValidationMessageFor(model => model.DOB)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DiagnoseDate)
        </div>
        <div class="editor-field">  
            @Html.EditorFor(model => model.DiagnoseDate)
            @Html.ValidationMessageFor(model => model.DiagnoseDate)
        </div>*@

                    @*
            dob
            date of
            //dcc provider
            //provider phone #
            goal
            goalinit values (times/week)
            current goal usage?
            parent contact #
            parent email
            contact parents?
            level/points
            *@

        <p>
            <input type="submit" value="I agree - Register me!" />
        </p>
        </div>
        <div style="float:left;width:70%">
            By registering for MyDiaText you acknowledge that the MyDiaText service
             is a web-based application and cannot provide personal medical advice. 
             If you have a question or concern about your diabetes management, or have 
             ketones, vomiting or hypoglycemia, please contact your diabetes provider 
             IMMEDIATELY. MyDiaText will not notify your diabetes provider. Furthermore,
              do not transmit any clinical information such as blood sugar readings,
               results or urine ketone testing on this website or through text messages. 
               Please contact your diabetes provider directly for any diabetes-related 
               emergency. In the case the MyDiaText does not understand your messages or 
               replies, you will receive an SMS-friendly version of this message.
        </div>
    </fieldset>
}